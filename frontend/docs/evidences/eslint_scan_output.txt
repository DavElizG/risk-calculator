================================================================================
ESLINT SECURITY SCAN - RISK CALCULATOR FRONTEND
================================================================================

Fecha de ejecución: 28 de octubre de 2025
Herramienta: ESLint v8.57.1
Configuración: typescript-eslint + react-hooks + react-refresh
Comando: npx eslint "src/**/*.{ts,tsx,js,jsx}"
Directorio: C:\Users\majif\Downloads\risk-calculator\frontend\my-app

================================================================================
RESULTADOS DEL ANÁLISIS
================================================================================

C:\Users\majif\Downloads\risk-calculator\frontend\my-app\src\App.tsx
  50:46  error  Unexpected any. Specify a different type  
                @typescript-eslint/no-explicit-any
  86:72  error  Unexpected any. Specify a different type  
                @typescript-eslint/no-explicit-any

C:\Users\majif\Downloads\risk-calculator\frontend\my-app\src\components\Toast.tsx
  29:6  warning  React Hook useEffect has a missing dependency: 'handleClose'. 
                 Either include it or remove the dependency array  
                 react-hooks/exhaustive-deps

C:\Users\majif\Downloads\risk-calculator\frontend\my-app\src\contexts\ThemeContext.tsx
  10:14  warning  Fast refresh only works when a file only exports components. 
                  Use a new file to share constants or functions between components  
                  react-refresh/only-export-components

C:\Users\majif\Downloads\risk-calculator\frontend\my-app\src\services\riskCalculatorApi.ts
  39:40  error  Unexpected any. Specify a different type  
                @typescript-eslint/no-explicit-any
  45:22  error  Unexpected any. Specify a different type  
                @typescript-eslint/no-explicit-any
  69:16  error  This branch can never execute. Its condition is a duplicate or 
                covered by previous conditions in the if-else-if chain  
                no-dupe-else-if

C:\Users\majif\Downloads\risk-calculator\frontend\my-app\src\types\riskCalculator.ts
  28:39  error  Unexpected any. Specify a different type  
               @typescript-eslint/no-explicit-any
  119:39  error  Unexpected any. Specify a different type  
                @typescript-eslint/no-explicit-any

================================================================================
RESUMEN
================================================================================

✖ 9 problems (7 errors, 2 warnings)

Distribución por tipo:
  - @typescript-eslint/no-explicit-any: 6 errores
  - no-dupe-else-if: 1 error
  - react-hooks/exhaustive-deps: 1 warning
  - react-refresh/only-export-components: 1 warning

Distribución por archivo:
  - src/services/riskCalculatorApi.ts: 3 problemas (3 errores)
  - src/App.tsx: 2 problemas (2 errores)
  - src/types/riskCalculator.ts: 2 problemas (2 errores)
  - src/components/Toast.tsx: 1 problema (1 warning)
  - src/contexts/ThemeContext.tsx: 1 problema (1 warning)

================================================================================
ANÁLISIS DE RIESGO DE SEGURIDAD
================================================================================

RIESGO ALTO (7 errores):
------------------------------------------------------------------------------
1. Type Safety Violations (6 ocurrencias)
   - Uso de tipo 'any' que elimina protección de TypeScript
   - Permite bypass de validación de tipos
   - Vulnerabilidad potencial a inyección de datos maliciosos
   - CVSS Base Score Estimado: 5.3 (Medium)
   
2. Logic Error (1 ocurrencia)
   - Condición duplicada en if-else-if
   - Código inaccesible que puede omitir validaciones
   - Comportamiento inesperado en manejo de errores HTTP
   - CVSS Base Score Estimado: 3.1 (Low)

RIESGO MEDIO (2 warnings):
------------------------------------------------------------------------------
1. React Hooks Dependency (1 ocurrencia)
   - useEffect con dependencias incompletas
   - Puede causar stale closures y comportamiento inconsistente
   - Impacto en UX y posible exposición de datos obsoletos
   
2. Fast Refresh Configuration (1 ocurrencia)
   - Exportación mixta afecta hot module replacement
   - Solo impacta desarrollo, no producción
   - Sin impacto de seguridad directo

================================================================================
RECOMENDACIONES PRIORITARIAS
================================================================================

INMEDIATAS (Esta semana):
1. [CRÍTICO] Reemplazar todos los tipos 'any' con tipos específicos
2. [CRÍTICO] Corregir condición duplicada en riskCalculatorApi.ts línea 69
3. [ALTO] Implementar validación con Zod en funciones afectadas

CORTO PLAZO (Próxima semana):
4. [MEDIO] Corregir dependencias en React Hooks (Toast.tsx)
5. [BAJO] Refactorizar exports en ThemeContext.tsx

CONFIGURACIÓN:
6. Integrar ESLint en pre-commit hooks con Husky
7. Agregar ESLint al pipeline de CI/CD
8. Establecer política "zero warnings" para nuevos PRs

================================================================================
CONFIGURACIÓN DE ESLINT UTILIZADA
================================================================================

Archivo: eslint.config.js
Framework: typescript-eslint (Flat Config)
Plugins activos:
  - @eslint/js (recommended)
  - typescript-eslint (recommended)
  - eslint-plugin-react-hooks
  - eslint-plugin-react-refresh

Reglas principales:
  - @typescript-eslint/no-explicit-any: error
  - no-dupe-else-if: error
  - react-hooks/exhaustive-deps: warn
  - react-refresh/only-export-components: warn

================================================================================
CUMPLIMIENTO CON ESTÁNDARES
================================================================================

✅ OWASP Top 10 2021:
   - A03:2021 - Injection (parcial, requiere corregir 'any' types)
   - A04:2021 - Insecure Design (detectado, requiere corrección)

✅ SSDLC Best Practices:
   - Static Code Analysis: Implementado
   - Automated Quality Gates: En progreso
   - Continuous Security Testing: Pendiente integración CI/CD

✅ TypeScript Best Practices:
   - Strict Type Checking: Parcial (6 violaciones detectadas)
   - No Implicit Any: Configurado pero violado en 6 lugares
   - Exhaustive Deps Check: Activo

================================================================================
FIN DEL REPORTE
================================================================================

Generado por: ESLint v8.57.1
Proyecto: Risk Calculator Frontend
Equipo: Marco Jimenez, Norman Alvarado, Jose Guadamuz, Melina Cruz
Fecha: 28/10/2025
Estado: REQUIERE ACCIÓN - 7 errores críticos detectados
